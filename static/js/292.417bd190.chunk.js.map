{"version":3,"file":"static/js/292.417bd190.chunk.js","mappings":"wQAAO,IAAMA,EAAiB,kCACjBC,EAAU,mCACVC,EAAqB,sBACrBC,EAAgB,gBAChBC,EAAO,U,4LCFPC,EAAUC,EAAAA,GAAAA,QAAH,uEAIPC,EAAgBD,EAAAA,GAAAA,GAAH,2KAQbE,EAAWF,EAAAA,GAAAA,GAAH,mGAMRG,EAAWH,EAAAA,GAAAA,GAAH,yTAgBRI,EAAcJ,EAAAA,GAAAA,IAAH,sFAMXK,EAAgBL,EAAAA,GAAAA,GAAH,0K,mBCtCbM,EAAmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAACV,EAAD,WACI,UAACW,EAAA,EAAD,YACI,SAACT,EAAD,+BACA,SAACC,EAAD,UACCK,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACP,SAACX,EAAD,WACI,UAAC,KAAD,CAAMY,GAAE,iBAAYH,GAAMI,MAAO,CAACC,KAAMT,GAAxC,WACI,SAACJ,EAAD,CAAac,IAAG,UAAKxB,EAAAA,GAAL,YAAuBoB,GAAeK,IAAKN,KAC3D,SAACR,EAAD,UAAgBQ,QAHTD,c,UCPtBQ,EAAW,WACrB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOd,EAAP,KAAcmB,EAAd,KAeA,OAdAC,EAAAA,EAAAA,YAAU,WACTJ,GAAW,GACX,IAAMK,EAAQ,mCAAG,8GAEeC,EAAAA,EAAAA,MAFf,OAENC,EAFM,OAGZJ,EAASI,EAAaC,SAHV,gDAKZN,EAAS,KAAMO,SALH,yBAOZT,GAAW,GAPC,4EAAH,qDAUdK,MACE,KAEA,gCACIJ,IAAS,wBAAKA,KACf,SAAClB,EAAD,CAAkBC,MAAOA,IACxBe,IAAW,SAAC,EAAAW,aAAD,CAAcC,MAAM,iB,oKCxBzCC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMN,EAAe,mCAAG,oGACNM,IAAAA,IAAA,UAAavC,EAAAA,GAAb,oBAA2CD,EAAAA,KADrC,cACvByC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKfC,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,IAAAA,IAAA,UAClBtC,EAAAA,GADkB,oBACOF,EAAAA,GADP,kBACwB4C,IAFhB,cACzBH,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBG,EAAkB,mCAAG,WAAM5B,GAAN,uFACTuB,IAAAA,IAAA,UAClBrC,EAAAA,GADkB,YACVc,EADU,oBACIjB,EAAAA,GADJ,wCADS,cAC1ByC,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH","sources":["constance/constance.js","components/HomePageTemplate/HomePageTemplate.styled.jsx","components/HomePageTemplate/HomePageTemplate.jsx","pages/HomePage.jsx","services/themoviedbApi.js"],"sourcesContent":["export const SEARCH_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = 'acf3cca943ac5337a13eedff98e533f5';\nexport const POPULAR_FILM_FETCH = '/trending/movie/day';\nexport const SEARCH__MOVIE = '/search/movie';\nexport const FILM = '/movie';\nexport const FILM_CAST = '/credits';\nexport const FILM_REVIEWS = '/reviews';\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  text-align: center;\n  background: #383838;\n`;\nexport const HomePageTitle = styled.h2`\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-weight: 500;\n    font-size: 24px;\n    margin-bottom: 20px;\n    color: #ec711f;\n`;\n\nexport const FilmList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const FilmItem = styled.li`\n    width: 240px;\n    border-radius: 10px;\n    overflow: hidden;\n    background-color: #fff;\n    transform: scale(1);\n    transition: transform 250ms ease;\n    :not(:last-child){\n        margin-bottom: 30px;\n    }\n    :hover,\n    :focus {\n        transform: scale(1.1);\n    }\n`;\n\nexport const FilmItemImg = styled.img`\n    width: 290px;\n    height: 320px;\n    object-fit: fill;\n`;\n\nexport const FilmItemTitle = styled.h3`\n    padding: 5px;\n    font-family: Georgia, 'Times New Roman', Times, serif;\n    font-weight: 400;\n    line-height: 133%;\n\n    color: #000;\n`;\n\n","import { Link, useLocation } from \"react-router-dom\";\nimport { SEARCH_IMG_URL } from \"constance\";\nimport { HomePageTitle, Section, FilmList, FilmItem, FilmItemImg, FilmItemTitle } from \"./HomePageTemplate.styled\";\nimport { Wrapper } from \"components/Wrapper\";\nexport const HomePageTemplate = ({ films }) => {\n    const location = useLocation();\n    return (\n        <Section>\n            <Wrapper>\n                <HomePageTitle>Trending today:</HomePageTitle>\n                <FilmList>\n                {films.map(({ id, title, poster_path })=> (\n                    <FilmItem key={id}>\n                        <Link to={`movies/${id}`} state={{from: location}}>\n                            <FilmItemImg src={`${SEARCH_IMG_URL}/${poster_path}`} alt={title} />\n                            <FilmItemTitle>{title}</FilmItemTitle>\n                        </Link>\n                    </FilmItem>\n                ))}\n                </FilmList>\n            </Wrapper>\n        </Section>\n        \n    )\n}","import { getPopularFilms } from \"services/themoviedbApi\";\nimport { useState, useEffect } from \"react\";\nimport { HomePageTemplate } from \"components/HomePageTemplate/HomePageTemplate\";\nimport { BounceLoader } from \"react-spinners\";\n\nexport const HomePage = () => {\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [films, setFilms] = useState([]);\n   useEffect(() => {\n    setLoading(true);  \n    const getFilms = async () => {\n      try {\n         const popularFilms = await getPopularFilms();\n         setFilms(popularFilms.results);\n      } catch (error) {\n         setError(error.message);\n      } finally {\n         setLoading(false);  \n      }\n    }\n    getFilms();\n   }, []);\n   return (\n      <> \n         {error && <h2>{error}</h2>}\n         <HomePageTemplate films={films}/>\n         {loading && <BounceLoader color=\"#e24392\"/>}\n      </>\n   )\n}","import axios from 'axios';\nimport { API_KEY, POPULAR_FILM_FETCH, SEARCH__MOVIE, FILM } from '../constance';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getPopularFilms = async () => {\n  const response = await axios.get(`${POPULAR_FILM_FETCH}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchFilmsByName = async name => {\n  const response = await axios.get(\n    `${SEARCH__MOVIE}?api_key=${API_KEY}&query=${name}`\n  );\n  return response.data;\n};\n\nexport const getFilmDetailsById = async id => {\n  const response = await axios.get(\n    `${FILM}/${id}?api_key=${API_KEY}&append_to_response=credits,reviews`\n  );\n  return response.data;\n};\n"],"names":["SEARCH_IMG_URL","API_KEY","POPULAR_FILM_FETCH","SEARCH__MOVIE","FILM","Section","styled","HomePageTitle","FilmList","FilmItem","FilmItemImg","FilmItemTitle","HomePageTemplate","films","location","useLocation","Wrapper","map","id","title","poster_path","to","state","from","src","alt","HomePage","useState","loading","setLoading","error","setError","setFilms","useEffect","getFilms","getPopularFilms","popularFilms","results","message","BounceLoader","color","axios","response","data","searchFilmsByName","name","getFilmDetailsById"],"sourceRoot":""}