{"version":3,"file":"static/js/812.d68cad9d.chunk.js","mappings":"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","sources":["constance/constance.js","pages/Cast.jsx","components/HomePageTemplate.jsx","pages/HomePage.jsx","components/MovieDetailsTemplate.jsx","components/BackBtn.jsx","components/ErrorMessage.jsx","pages/MovieDetailsPage.jsx","components/SearchForm.jsx","components/MoviesPageTemplate.jsx","pages/MoviesPage.jsx","pages/Reviews.jsx","services/themoviedbApi.js"],"sourcesContent":["export const SEARCH_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = 'acf3cca943ac5337a13eedff98e533f5';\nexport const POPULAR_FILM_FETCH = '/trending/movie/day';\nexport const SEARCH__MOVIE = '/search/movie';\nexport const FILM = '/movie';\nexport const FILM_CAST = '/credits';\nexport const FILM_REVIEWS = '/reviews';\n","import { SEARCH_IMG_URL } from \"constance\";\n\nexport const Cast = ({cast}) => {\n    return (\n        <ul>\n            { cast.map(({ id, profile_path, name, character}) => (\n                <li key={id}>\n                {profile_path && <img src={`${SEARCH_IMG_URL}/${profile_path}`} alt={name} />}\n                <p>Name: {name}</p>\n                <p>Character: {character}</p>\n                </li>\n            ))}\n        </ul>\n    )\n}\n","import { Link, useLocation } from \"react-router-dom\";\nimport { SEARCH_IMG_URL } from \"constance\";\nexport const HomePageTemplate = ({ films }) => {\n    const location = useLocation();\n    return (\n        <>\n            <h2>Trending today</h2>\n            <ul>\n            {films.map(({ id, title, poster_path })=> (\n                <li key={id}>\n                    <Link to={`movies/${id}`} state={{from: location}}>\n                        <img src={`${SEARCH_IMG_URL}/${poster_path}`} alt={title} />\n                        <h2>{title}</h2>\n                    </Link>\n                </li>\n            ))}\n            </ul>\n        </>\n    )\n}","import { getPopularFilms } from \"services/themoviedbApi\";\nimport { useState, useEffect } from \"react\";\nimport { HomePageTemplate } from \"components/HomePageTemplate\";\nimport { BounceLoader } from \"react-spinners\";\n\nexport const HomePage = () => {\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [films, setFilms] = useState([]);\n   useEffect(() => {\n    setLoading(true);  \n    const getFilms = async () => {\n      try {\n         const popularFilms = await getPopularFilms();\n         setFilms(popularFilms.results);\n      } catch (error) {\n         setError(error.message);\n      } finally {\n         setLoading(false);  \n      }\n    }\n    getFilms();\n   }, []);\n   return (\n      <> \n         {error && <h2>{error}</h2>}\n         <HomePageTemplate films={films}/>\n         {loading && <BounceLoader color=\"#e24392\"/>}\n      </>\n   )\n}","import { SEARCH_IMG_URL } from \"constance\";\nimport { useLocation, NavLink } from \"react-router-dom\";\n export const MovieDetailsTemplate = ({movie}) => {\n    const location = useLocation();\n\n    const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n    const releaseYear = release_date.slice(0, 4);\n    const filmGenres = genres.map(data => data.name).join(', ');\n    return (\n        <>\n            <article>\n                <img src={`${SEARCH_IMG_URL}${poster_path}`} alt=\"\" />\n                <h2>{title} ({releaseYear})</h2>\n                    <p>User score: {vote_average}</p>\n                <h3>Overview</h3>\n                    <p>{overview}</p>\n                <h4>Genres</h4>\n                    <p>{filmGenres}</p>\n            </article>\n\n            <hr />\n\n            <p>Additional information</p>\n            \n            <nav>\n                <NavLink to='cast' state={location.state}>Cast</NavLink> \n                <NavLink to='reviews' state={location.state}>Reviews</NavLink> \n            </nav>\n            \n            <hr />\n        </>\n        \n    )\n}","import { useLocation, useNavigate } from \"react-router-dom\"\n\nexport const BackBtn = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const handleClick = () => {\n        navigate(location?.state?.from ?? '/movies');\n    } \n    return (\n        <button type=\"button\" onClick={handleClick}>Go back</button>\n    )\n}\n","export const ErrorMessage = ({ value }) => {\n   return <p>We dont have any {value} for this movie.</p>    \n}","import { useEffect, useState, Suspense } from \"react\";\nimport { createChunk } from \"helpers/createChunk\";\nimport { useParams, Routes, Route } from \"react-router-dom\";\nimport { getFilmDetailsById } from \"services/themoviedbApi\";\nimport { MovieDetailsTemplate } from \"components/MovieDetailsTemplate\";\nimport { BackBtn } from \"components/BackBtn\";\nimport { BounceLoader, DotLoader } from \"react-spinners\";\nimport { ErrorMessage } from \"components/ErrorMessage\";\n\nconst Cast = createChunk('Cast');\nconst Reviews = createChunk('Reviews');\n\nexport const MovieDetailsPage = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const [filmDetails, setFilmDetails] = useState(null);\n    const [cast, setCast] = useState([]);\n    const [reviews, setReviews] = useState([]);\n    useEffect(() => {\n        setLoading(true);\n        const getFilmDetails = async () => {\n            try {\n                const response = await getFilmDetailsById(movieId);\n                const {\n                    id,\n                    title,\n                    release_date,\n                    vote_average,\n                    poster_path,\n                    overview,\n                    genres,\n                    credits:{ cast },\n                    reviews:{ results},\n                } = response;\n                setFilmDetails({ id, title, release_date, vote_average, poster_path, overview, genres });\n                setCast(cast);\n                setReviews(results)\n            } catch (error) {\n                setError(error.message);\n            } finally {\n            setLoading(false);\n            }\n            \n        }\n        getFilmDetails();\n    }, [movieId]);\n    \n    return (\n       <>\n        <BackBtn />\n        {error && <h2>{error}</h2>}\n        {loading && <BounceLoader color=\"#e24392\"/>}\n        {filmDetails && <MovieDetailsTemplate movie={filmDetails}/>}\n\n        <Suspense fallback={<DotLoader color=\"#e24392\"/>}>\n            <Routes>\n                <Route path=\"cast\" element={cast.length ?<Cast cast={cast}/> : <ErrorMessage value={'cast information'}/>}/>\n                <Route path=\"reviews\" element={reviews.length ?<Reviews reviews={reviews}/> : <ErrorMessage value={'reviews'}/>}/>\n            </Routes> \n        </Suspense>\n\n       </> \n    )\n}","import { useState } from \"react\"\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [searchValue, setSearchValue] = useState('');\n    \n    const handleChange = event => {\n        setSearchValue(event.currentTarget.value)\n    }\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        const normalizedSearchValue = searchValue.toLowerCase().trim();\n        onSubmit(normalizedSearchValue);\n        setSearchValue('');\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"search films\" value={searchValue} onChange={handleChange}/>\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}","import { Link, useLocation } from \"react-router-dom\";\nimport { SEARCH_IMG_URL } from \"constance\";\n\nexport const MoviesPageTemplate = ({ films })=> {\n   const location = useLocation();\n       return (\n        <ul>\n            {\n               films.map(({ id, title, poster_path }) => (\n                  <li key={id}>\n                     <Link to={`${id}`} state={{from: location}}>\n                        <img src={`${SEARCH_IMG_URL}/${poster_path}`} alt={title} />\n                        <h2>{title}</h2>\n                     </Link>\n                  </li>\n               ))\n            }\n         </ul>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { SearchForm } from \"components/SearchForm\";\nimport { searchFilmsByName } from \"services/themoviedbApi\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MoviesPageTemplate } from \"components/MoviesPageTemplate\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { BounceLoader } from \"react-spinners\";\n\nexport const MoviesPage = () => {\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [searchParams, setSearchParams] = useSearchParams();\n   const [films, setFilms] = useState([]);\n\n   useEffect(() => {\n\n      const name = searchParams.get('query')\n      if(!name){\n         return;\n      }\n      setLoading(true);\n\n     const searchFilms = async () => {\n         try {\n            const films = await searchFilmsByName(name);\n            if (!films.results.length) {\n            toast.error('No result, please input a new search value!');\n            return;\n            }\n            setFilms(films.results);\n         } catch (error) {\n           setError(error.message);\n        } finally {\n           setLoading(false);\n        }\n        \n     } \n     searchFilms();    \n   },[searchParams]);\n\n   const onSubmit = value => {\n      if(!value){\n         toast.error('Plese input search value!');\n         return;\n      }\n      setSearchParams({query: value});\n   }\n   \n   return (\n      <>\n         <Toaster toastOptions={{\n            style: {\n               background: '#e45b5b',\n               padding: '16px',\n               color: '#e9e9e9',\n            },\n         }}/>\n         <SearchForm onSubmit={onSubmit}/>\n         {loading && <BounceLoader color=\"#e24392\"/>}\n         {error && <h2>{error}</h2>}\n         {films && \n         <MoviesPageTemplate films={films}/>}\n      </>\n         \n   )\n}","export const Reviews = ({reviews}) => {\n   return (\n       <ul>\n               {reviews.map(({id, author, content}) => (\n                   <li key={id}>\n                       <h3>Author: {author}</h3>\n                       <p>{content}</p>\n                   </li>\n               ))}\n       </ul>\n   )\n}\n\n\n\n","import axios from 'axios';\nimport { API_KEY, POPULAR_FILM_FETCH, SEARCH__MOVIE, FILM } from '../constance';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getPopularFilms = async () => {\n  const response = await axios.get(`${POPULAR_FILM_FETCH}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchFilmsByName = async name => {\n  const response = await axios.get(\n    `${SEARCH__MOVIE}?api_key=${API_KEY}&query=${name}`\n  );\n  return response.data;\n};\n\nexport const getFilmDetailsById = async id => {\n  const response = await axios.get(\n    `${FILM}/${id}?api_key=${API_KEY}&append_to_response=credits,reviews`\n  );\n  return response.data;\n};\n"],"names":["SEARCH_IMG_URL","API_KEY","POPULAR_FILM_FETCH","SEARCH__MOVIE","FILM","Cast","cast","map","id","profile_path","name","character","src","alt","HomePageTemplate","films","location","useLocation","title","poster_path","to","state","from","HomePage","useState","loading","setLoading","error","setError","setFilms","useEffect","getFilms","getPopularFilms","popularFilms","results","message","BounceLoader","color","MovieDetailsTemplate","movie","release_date","vote_average","overview","genres","releaseYear","slice","filmGenres","data","join","BackBtn","navigate","useNavigate","type","onClick","ErrorMessage","value","createChunk","Reviews","MovieDetailsPage","movieId","useParams","filmDetails","setFilmDetails","setCast","reviews","setReviews","getFilmDetails","getFilmDetailsById","response","credits","Suspense","fallback","DotLoader","path","element","length","SearchForm","onSubmit","searchValue","setSearchValue","event","preventDefault","normalizedSearchValue","toLowerCase","trim","placeholder","onChange","currentTarget","MoviesPageTemplate","MoviesPage","useSearchParams","searchParams","setSearchParams","get","searchFilms","searchFilmsByName","toast","toastOptions","style","background","padding","query","author","content","axios"],"sourceRoot":""}