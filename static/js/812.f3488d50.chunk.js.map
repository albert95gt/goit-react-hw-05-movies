{"version":3,"file":"static/js/812.f3488d50.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Main/Main.styled.jsx","constance/constance.js","pages/Cast/Cast.jsx","pages/Cast/Cast.styled.jsx","components/HomePageTemplate/HomePageTemplate.styled.jsx","components/HomePageTemplate/HomePageTemplate.jsx","pages/HomePage/HomePage.jsx","components/MovieDetailsTemplate/MovieDetailsTemplate.styled.jsx","components/BackBtn/BackBtn.styled.jsx","components/BackBtn/BackBtn.jsx","components/MovieDetailsTemplate/MovieDetailsTemplate.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/MoviesPageTemplate/MoviesPageTemplate.styled.jsx","components/MoviesPageTemplate/MoviesPageTemplate.jsx","pages/MoviesPage/MoviesPage.jsx","pages/Reviews/Reviews.jsx","pages/Reviews/Reviews.styled.jsx","services/themoviedbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SpinnerContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\n","import { BounceLoader } from \"react-spinners\";\nimport { SpinnerContainer } from \"./Loader.styled\";\n\nexport const Spinner = () => {\n    return <SpinnerContainer>\n        <BounceLoader color=\"#ec711f\"/>\n    </SpinnerContainer>\n}","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  background: linear-gradient(#180101, #4e0d0d);\n  min-height: 100vh;\n  \n`;","export const SEARCH_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = 'acf3cca943ac5337a13eedff98e533f5';\nexport const POPULAR_FILM_FETCH = '/trending/movie/day';\nexport const SEARCH__MOVIE = '/search/movie';\nexport const FILM = '/movie';\nexport const FILM_CAST = '/credits';\nexport const FILM_REVIEWS = '/reviews';\n","import { SEARCH_IMG_URL } from \"constance\";\nimport { Section, CastList, CastItem, ActorPoster, DefaultImg, ActorDescr } from \"./Cast.styled\";\nimport DefaultImage from '../../images/DefaultImage.jpg';\nimport { Wrapper } from \"components/Wrapper/Wrapper.styled\";\n\nexport const Cast = ({cast}) => {\n    return (\n        <Section>\n            <Wrapper>\n                <CastList>\n                    { cast.map(({ id, profile_path, name, character}) => (\n                        <CastItem key={id}>\n                            {profile_path ? <ActorPoster src={`${SEARCH_IMG_URL}/${profile_path}`} alt={name} /> : <DefaultImg src={DefaultImage} alt=\"poster not available\"/> }\n                            <ActorDescr>\n                                <p>Name: {name}</p>\n                                {character && <p>Character: {character}</p>}\n                            </ActorDescr>\n                        </CastItem>\n                    ))}\n                </CastList>\n            </Wrapper>\n        </Section>\n        \n    )\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-bottom: 60px;  \n`;\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const CastItem = styled.li`\n    width: 240px;\n    border-radius: 10px;\n    overflow: hidden;\n    background-color: #ec711f;\n    transform: scale(1);\n    transition: transform 250ms ease;\n    :not(:last-child){\n        margin-bottom: 30px;\n    }\n`;\n\nexport const ActorPoster = styled.img`\n    position: relative;\n    width: 290px;\n    height: 320px;\n    object-fit: fill;\n`;\n\nexport const DefaultImg = styled.img`\n    position: relative;\n    width: 290px;\n    height: 320px;\n    object-fit: fill;\n`;\n\nexport const ActorDescr = styled.div`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  background-color:#313131ca;  \n  color: #fff;   \n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\nexport const HomePageTitle = styled.h2`\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-weight: 500;\n    font-size: 24px;\n    margin-bottom: 30px;\n    color: #ec711f;\n`;\n\nexport const FilmList = styled.ul`\n    display: flex;\n    align-items: center;\n    @media screen and (max-width: 767px){\n        flex-direction: column;\n    }\n\n    @media screen and (min-width: 768px){\n        flex-wrap: wrap;\n        justify-content: center;\n        margin-top: -30px;\n        margin-left: -30px;\n    }\n`;\n\nexport const FilmItem = styled.li`\n    max-width: 240px;\n    border-radius: 10px;\n    overflow: overlay;\n    background-color: #ec711f;\n    transform: scale(1);\n    transition: transform 250ms ease;\n\n    :hover,\n    :focus {\n        transform: scale(1.1);\n    }\n\n    @media screen and (max-width: 767px){\n        :not(:last-child){\n            margin-bottom: 30px;\n        }\n    }\n    \n    @media screen and (min-width: 768px){\n        flex-basis: calc((100% - 60px) / 2);\n        margin-top: 30px;\n        margin-left: 30px;\n    }\n\n    @media screen and (min-width: 1024px){\n        flex-basis: calc((100% - 90px) / 3);\n        margin-top: 30px;\n        margin-left: 30px;\n    }\n\n    @media screen and (min-width: 1440px){\n        flex-basis: calc((100% - 120px) / 4);\n        margin-top: 30px;\n        margin-left: 30px;\n    }\n`;\n\nexport const FilmItemImg = styled.img`\n    width: 290px;\n    height: 320px;\n    object-fit: fill;\n`;\n\nexport const DefaultImg = styled.img`\n    width: 290px;\n    height: 320px;\n    object-fit: fill;\n`;\n\nexport const FilmItemTitle = styled.h3`\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 5px;\n    font-weight: 400;\n    line-height: 133%;\n\n    color: #fff;\n`;\n\n","import { Link, useLocation } from \"react-router-dom\";\nimport { SEARCH_IMG_URL } from \"constance\";\nimport { HomePageTitle, Section, FilmList, FilmItem, FilmItemImg, DefaultImg, FilmItemTitle } from \"./HomePageTemplate.styled\";\nimport { Wrapper } from \"components/Wrapper\";\nimport DefaultPoster from \"../../images/PosterNotAvailable.jpg\";\n\nexport const HomePageTemplate = ({ films }) => {\n    const location = useLocation();\n    return (\n        <Section>\n            <Wrapper>\n                <HomePageTitle>Trending today:</HomePageTitle>\n                <FilmList>\n                {films.map(({ id, title, poster_path })=> (\n                    <FilmItem key={id}>\n                        <Link to={`movies/${id}`} state={{from: location}}>\n                            {poster_path ? <FilmItemImg src={`${SEARCH_IMG_URL}/${poster_path}`} alt={title} /> : <DefaultImg src={DefaultPoster} alt=\"poster not available\"/>}\n                            \n                            <FilmItemTitle>{title}</FilmItemTitle>\n                        </Link>\n                    </FilmItem>\n                ))}\n                </FilmList>\n            </Wrapper>\n        </Section>\n        \n    )\n}","import { getPopularFilms } from \"services/themoviedbApi\";\nimport { useState, useEffect } from \"react\";\nimport { HomePageTemplate } from \"components/HomePageTemplate/HomePageTemplate\";\nimport { Spinner } from \"components/Loader/Loader\";\nimport { Main } from \"components/Main/Main.styled\";\n\nexport const HomePage = () => {\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [films, setFilms] = useState([]);\n   useEffect(() => {\n    setLoading(true);  \n    const getFilms = async () => {\n      try {\n         const popularFilms = await getPopularFilms();\n         setFilms(popularFilms.results);\n      } catch (error) {\n         setError(error.message);\n      } finally {\n         setLoading(false);  \n      }\n    }\n    getFilms();\n   }, []);\n   return (\n      <Main> \n         {error && <h2>{error}</h2>}\n         <HomePageTemplate films={films}/>\n         {loading && <Spinner color=\"#ec711f\" />}\n      </Main>\n   )\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Article = styled.article`\n\n  @media screen and (min-width: 768px){\n    display: flex;\n    padding-top: 30px;\n    padding-bottom: 30px;\n  }\n`;\n\nexport const DescContainer = styled.div`\n  @media screen and (min-width: 768px){\n    margin-left: 20px;  \n  }\n`;\n\n\nexport const Img = styled.img`\n \n  width: 300px;\n  height: 400px;\n  \n  @media screen and (max-width: 767px){\n    margin-bottom: 20px;  \n  }\n  \n`;\n\nexport const DefaultImg = styled.img`\n  width: 300px;\n  height: 400px;\n  margin-bottom: 20px; \n`;\n\nexport const MovieTitle = styled.h2`\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 20px;\n  line-height: 1.15;\n  margin-bottom: 10px;\n  color: #fff;\n`;\n\nexport const Score = styled.h3`\n  font-size: 18px;\n  line-height: 1.25;\n  color: #fff;\n  margin-bottom: 10px;\n`;\n\nexport const ScoreValue = styled.span`\n  color: #ec711f;\n  margin-left: 5px;\n`;\n\nexport const Overview = styled.h3`\n  font-size: 18px;\n  line-height: 1.25;\n  color: #fff;\n`;\n\nexport const OverviewDescr = styled.p`\n  font-size: 16px;\n  color: #ec711f;\n  margin-bottom: 10px;\n`\nexport const Genres = styled.h3`\n  font-size: 18px;\n  line-height: 1.25;\n  color: #fff;\n\n`;\n\nexport const GenresDescr = styled.p`\n  font-size: 16px;\n  color: #ec711f;\n  margin-bottom: 10px;\n\n`\nexport const MoreInformation = styled.h3`\n  font-size: 18px;\n  line-height: 1.25;\n  color: #fff;\n  margin-bottom: 10px;\n`\n\nexport const Link = styled(NavLink)`\n  width: 32px;\n  height: 32px;\n  background-color: #ec711f;\n  border-radius: 5px;\n  color: #fff;\n  padding: 5px;\n  transition: background-color 250ms ease;\n\n  :hover, \n  :focus {\n    background-color: #fa6705;\n  }\n\n  &.active{\n    background: #e94c0e;\n  }\n  :not(:last-child){\n    margin-right: 10px;\n  }\n`\n\n\n","import styled from 'styled-components';\n\nexport const BackBtnStyled = styled.button`\n   width: 100px;\n   height: 35px;\n   font-size: 16px;\n   background-color: #ec711f;\n   border: none;\n   border-radius: 5px;\n   padding: 5px;\n   text-align: center;\n   color: #fff;\n   margin-bottom: 10px;\n\n   :hover {\n       background-color: #ec4f1f;\n   }\n`;","import { useLocation, useNavigate } from \"react-router-dom\"\nimport { BackBtnStyled } from \"./BackBtn.styled\";\nimport { BsArrowLeft } from \"react-icons/bs\"\n\nexport const BackBtn = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const handleClick = () => {\n        navigate(location?.state?.from ?? '/movies');\n    } \n    return (\n        <BackBtnStyled type=\"button\" onClick={handleClick}><BsArrowLeft size='20px'/> Go back</BackBtnStyled>\n    )\n}\n","import { SEARCH_IMG_URL } from \"constance\";\nimport { useLocation } from \"react-router-dom\";\nimport { Section, Article,  DescContainer, Img, DefaultImg, MovieTitle, Score, ScoreValue, Overview, OverviewDescr, Genres, GenresDescr, MoreInformation, Link } from \"./MovieDetailsTemplate.styled\";\nimport { Wrapper } from \"components/Wrapper/Wrapper.styled\";\nimport { BackBtn } from \"components/BackBtn/BackBtn\";\nimport DefaultPoster from \"../../images/PosterNotAvailable.jpg\";\n\n export const MovieDetailsTemplate = ({movie}) => {\n    const location = useLocation();\n\n    const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n    const releaseYear = release_date.slice(0, 4);\n    const filmGenres = genres.map(data => data.name).join(', ');\n    const userScore = vote_average * 10;\n    return (\n        <Section>\n            <Wrapper>\n                <BackBtn />\n                <Article>\n                    {poster_path ? <Img src={`${SEARCH_IMG_URL}${poster_path}`} alt={title} /> : <DefaultImg src={DefaultPoster} alt=\"poster not available\"/>}\n                    <DescContainer>\n                        <MovieTitle>{title} ({releaseYear})</MovieTitle>\n                        <Score>User score<ScoreValue>{`${userScore}%`}</ScoreValue></Score>\n                        \n                        <Overview>Overview</Overview>\n                        <OverviewDescr>{overview}</OverviewDescr>\n                        \n                        <Genres>Genres</Genres>\n                        <GenresDescr>{filmGenres}</GenresDescr>\n\n                    </DescContainer>\n                </Article>\n                <MoreInformation>Additional information:</MoreInformation>\n                <nav>\n                    <Link to='cast' state={location.state}>Cast</Link> \n                    <Link to='reviews' state={location.state}>Reviews</Link> \n                </nav>\n            </Wrapper>\n        </Section>\n        \n    )\n}","import styled from 'styled-components';\n\nexport const ErrorMessageDescr = styled.p`\n  font-size: 16px;\n  text-align: center;\n  color: #fff;\n  padding-bottom: 30px;\n\n`;","import { ErrorMessageDescr } from \"./ErrorMessage.styled\"\n\nexport const ErrorMessage = ({ value }) => {\n   return <ErrorMessageDescr>We dont have any {value} for this movie.</ErrorMessageDescr>    \n}","import { useEffect, useState, Suspense } from \"react\";\nimport { createChunk } from \"helpers/createChunk\";\nimport { useParams, Routes, Route } from \"react-router-dom\";\nimport { getFilmDetailsById } from \"services/themoviedbApi\";\nimport { MovieDetailsTemplate } from \"components/MovieDetailsTemplate/MovieDetailsTemplate\";\nimport { Spinner } from \"components/Loader/Loader\";\nimport { ErrorMessage } from \"components/ErrorMessage/ErrorMessage\";\nimport { Main } from \"components/Main/Main.styled\";\n\nconst Cast = createChunk('Cast');\nconst Reviews = createChunk('Reviews');\n\nexport const MovieDetailsPage = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const [filmDetails, setFilmDetails] = useState(null);\n    const [cast, setCast] = useState([]);\n    const [reviews, setReviews] = useState([]);\n    useEffect(() => {\n        setLoading(true);\n        const getFilmDetails = async () => {\n            try {\n                const response = await getFilmDetailsById(movieId);\n                const {\n                    id,\n                    title,\n                    release_date,\n                    vote_average,\n                    poster_path,\n                    overview,\n                    genres,\n                    credits:{ cast },\n                    reviews:{ results},\n                } = response;\n                setFilmDetails({ id, title, release_date, vote_average, poster_path, overview, genres });\n                setCast(cast);\n                setReviews(results)\n            } catch (error) {\n                setError(error.message);\n            } finally {\n            setLoading(false);\n            }\n            \n        }\n        getFilmDetails();\n    }, [movieId]);\n    \n    return (\n       <Main>\n        {error && <h2>{error}</h2>}\n        {loading && <Spinner color=\"#ec711f\"/>}\n        {filmDetails && <MovieDetailsTemplate movie={filmDetails}/>}\n\n        <Suspense fallback=\"Loading...\">\n            <Routes>\n                <Route path=\"cast\" element={cast.length ?<Cast cast={cast}/> : <ErrorMessage value={'cast information'}/>}/>\n                <Route path=\"reviews\" element={reviews.length ?<Reviews reviews={reviews}/> : <ErrorMessage value={'reviews'}/>}/>\n            </Routes> \n        </Suspense>\n        \n       </Main> \n    )\n}","import styled from 'styled-components';\n\nexport const Form = styled.form`\n    padding-top: 30px;\n    padding-bottom: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const Input = styled.input`\n    width: 150px;\n    height: 35px;\n    border-radius: 10px;\n    padding-left: 5px;\n    border: none;\n    outline: none;\n    color: #313131;\n    font-size: 16px;\n    font-family: cursive;\n    margin-right: 5px;\n\n    :focus-visible {\n        border: solid 2px #e9691f;\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 260px;\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: 300px;\n        height: 50px;\n        font-size: 20px;\n    }\n`;\n\nexport const SearchBtn = styled.button`\n    width: 72px;\n    height: 35px;\n    border: none;\n    border-radius: 10px;\n    font-size: 16px;\n    font-family: cursive;\n    color: #fff;\n    cursor: pointer;\n    background: #e9691f;\n    transition: background 250ms ease;\n\n    :hover,\n    :focus {\n        background: #f85c01;\n    }\n\n    @media screen and (min-width: 1440px) {\n        width: 100px;\n        height: 50px;\n        font-size: 20px;\n    }\n`;","import { useState } from \"react\";\nimport { Form, Input, SearchBtn } from \"./SearchForm.styled\";\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [searchValue, setSearchValue] = useState('');\n    \n    const handleChange = event => {\n        setSearchValue(event.currentTarget.value)\n    }\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        const normalizedSearchValue = searchValue.toLowerCase().trim();\n        onSubmit(normalizedSearchValue);\n        setSearchValue('');\n    }\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Input type=\"text\" placeholder=\"Movies name\" value={searchValue} onChange={handleChange}/>\n            <SearchBtn type=\"submit\">Search</SearchBtn>\n        </Form>\n    )\n}","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-bottom: 60px;\n`;\n\nexport const FilmList = styled.ul`\n    margin-top: 20px;\n    display: flex;\n    align-items: center;\n    @media screen and (max-width: 767px){\n        flex-direction: column;\n    }\n\n    @media screen and (min-width: 768px){\n        flex-wrap: wrap;\n        justify-content: center;\n        margin-top: -30px;\n        margin-left: -30px;\n    }\n`;\n\nexport const FilmItem = styled.li`\n    max-width: 240px;\n    height: 360px;\n    border-radius: 10px;\n    overflow: overlay;\n    background-color: #ec711f;\n    transform: scale(1);\n    transition: transform 250ms ease;\n\n    :hover,\n    :focus {\n        transform: scale(1.1);\n    }\n\n    @media screen and (max-width: 767px){\n        :not(:last-child){\n            margin-bottom: 30px;\n        }\n    }\n    \n    @media screen and (min-width: 768px){\n        flex-basis: calc((100% - 60px) / 2);\n        margin-top: 30px;\n        margin-left: 30px;\n    }\n\n    @media screen and (min-width: 1024px){\n        flex-basis: calc((100% - 90px) / 3);\n        margin-top: 30px;\n        margin-left: 30px;\n    }\n\n    @media screen and (min-width: 1440px){\n        flex-basis: calc((100% - 120px) / 4);\n        margin-top: 30px;\n        margin-left: 30px;\n    }\n`;\n\nexport const FilmItemImg = styled.img`\n    width: 290px;\n    height: 320px;\n    object-fit: fill;\n`;\n\nexport const DefaultImg = styled.img`\n    width: 290px;\n    height: 320px;\n    object-fit: fill;\n`;\n\nexport const FilmItemTitle = styled.h3`\n    padding: 5px;\n    font-family: Georgia, 'Times New Roman', Times, serif;\n    font-weight: 400;\n    line-height: 133%;\n\n    color: #fff;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport { SEARCH_IMG_URL } from \"constance\";\nimport DefaultPoster from \"../../images/PosterNotAvailable.jpg\";\nimport { Section, FilmList, FilmItem, FilmItemImg, DefaultImg, FilmItemTitle } from \"./MoviesPageTemplate.styled\";\nimport { Wrapper } from \"components/Wrapper/Wrapper.styled\";\n\nexport const MoviesPageTemplate = ({ films })=> {\n   const location = useLocation();\n       return (\n         <Section>\n            <Wrapper>\n               <FilmList>\n                  {\n                     films.map(({ id, title, poster_path }) => (\n                        <FilmItem key={id}>\n                           <Link to={`${id}`} state={{from: location}}>\n                              {poster_path ? <FilmItemImg src={`${SEARCH_IMG_URL}/${poster_path}`} alt={title} /> : <DefaultImg src={DefaultPoster} alt=\"poster not available\"/>}\n                              <FilmItemTitle>{title}</FilmItemTitle>\n                           </Link>\n                        </FilmItem>\n                     ))\n                  }\n               </FilmList>\n            </Wrapper>\n         </Section> \n        \n    )\n}","import { useEffect, useState } from \"react\"\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { searchFilmsByName } from \"services/themoviedbApi\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MoviesPageTemplate } from \"components/MoviesPageTemplate/MoviesPageTemplate\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { BounceLoader } from \"react-spinners\";\nimport { Main } from \"components/Main/Main.styled\";\n\nexport const MoviesPage = () => {\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [searchParams, setSearchParams] = useSearchParams();\n   const [films, setFilms] = useState(null);\n\n   useEffect(() => {\n\n      const name = searchParams.get('query')\n      if(!name){\n         return;\n      }\n      setLoading(true);\n\n     const searchFilms = async () => {\n         try {\n            const films = await searchFilmsByName(name);\n            if (!films.results.length) {\n            toast.error('No result, please input a new search value!');\n            return;\n            }\n            setFilms(films.results);\n         } catch (error) {\n           setError(error.message);\n        } finally {\n           setLoading(false);\n        }\n        \n     } \n     searchFilms();    \n   },[searchParams]);\n\n   const onSubmit = value => {\n      if(!value){\n         toast.error('Plese input search value!');\n         return;\n      }\n      setSearchParams({query: value});\n   }\n   \n   return (\n      <Main>\n         <Toaster position=\"top-right\" toastOptions={{\n            style: {\n               background: '#e45b5b',\n               padding: '16px',\n               color: '#e9e9e9',\n            },\n         }}/>\n         <SearchForm onSubmit={onSubmit}/>\n         {loading && <BounceLoader color=\"#e24392\"/>}\n         {error && <h2>{error}</h2>}\n         {films && \n         <MoviesPageTemplate films={films}/>}\n      </Main>\n         \n   )\n}","import { Section, ReviewList, Author, AuthorName, AuthorComment } from \"./Reviews.styled\";\nimport { Wrapper } from \"components/Wrapper/Wrapper.styled\";\n\nexport const Reviews = ({reviews}) => {\n   return (\n       <Section>\n           <Wrapper>\n                <ReviewList>\n                    {reviews.map(({id, author, content}) => (\n                        <li key={id}>\n                            <Author>Author: <AuthorName>{author}</AuthorName></Author>\n                            <AuthorComment>{content}</AuthorComment>\n                        </li>\n                    ))}\n                </ReviewList>\n           </Wrapper>\n       </Section>\n       \n   )\n}\n\n\n\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n    padding-bottom: 60px;\n`\n\nexport const ReviewList = styled.ul`\n    width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 10px;\n    padding-right: 10px;\n`;\n\nexport const Author = styled.h4`\n    font-size: 18px;\n    color: #fff;\n`;\n\nexport const AuthorName = styled.span`\n    font-size: 18px;\n    color: #ec711f;\n`\n\nexport const AuthorComment = styled.p`\n    font-size: 16px;\n    color: #c0c0c0;\n`","import axios from 'axios';\nimport { API_KEY, POPULAR_FILM_FETCH, SEARCH__MOVIE, FILM } from '../constance';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getPopularFilms = async () => {\n  const response = await axios.get(`${POPULAR_FILM_FETCH}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchFilmsByName = async name => {\n  const response = await axios.get(\n    `${SEARCH__MOVIE}?api_key=${API_KEY}&query=${name}`\n  );\n  return response.data;\n};\n\nexport const getFilmDetailsById = async id => {\n  const response = await axios.get(\n    `${FILM}/${id}?api_key=${API_KEY}&append_to_response=credits,reviews`\n  );\n  return response.data;\n};\n"],"names":["SpinnerContainer","styled","Spinner","BounceLoader","color","Main","SEARCH_IMG_URL","API_KEY","POPULAR_FILM_FETCH","SEARCH__MOVIE","FILM","Cast","cast","Section","CastList","map","id","profile_path","name","character","CastItem","ActorPoster","src","alt","DefaultImg","DefaultImage","ActorDescr","HomePageTitle","FilmList","FilmItem","FilmItemImg","FilmItemTitle","HomePageTemplate","films","location","useLocation","Wrapper","title","poster_path","to","state","from","DefaultPoster","HomePage","useState","loading","setLoading","error","setError","setFilms","useEffect","getFilms","getPopularFilms","popularFilms","results","message","Article","DescContainer","Img","MovieTitle","Score","ScoreValue","Overview","OverviewDescr","Genres","GenresDescr","MoreInformation","Link","NavLink","BackBtnStyled","BackBtn","navigate","useNavigate","type","onClick","size","MovieDetailsTemplate","movie","release_date","vote_average","overview","genres","releaseYear","slice","filmGenres","data","join","userScore","ErrorMessageDescr","ErrorMessage","value","createChunk","Reviews","MovieDetailsPage","movieId","useParams","filmDetails","setFilmDetails","setCast","reviews","setReviews","getFilmDetails","getFilmDetailsById","response","credits","Suspense","fallback","path","element","length","Form","Input","SearchBtn","SearchForm","onSubmit","searchValue","setSearchValue","event","preventDefault","normalizedSearchValue","toLowerCase","trim","placeholder","onChange","currentTarget","MoviesPageTemplate","MoviesPage","useSearchParams","searchParams","setSearchParams","get","searchFilms","searchFilmsByName","toast","position","toastOptions","style","background","padding","query","ReviewList","author","content","Author","AuthorName","AuthorComment","axios"],"sourceRoot":""}