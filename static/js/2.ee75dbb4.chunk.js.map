{"version":3,"file":"static/js/2.ee75dbb4.chunk.js","mappings":"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","sources":["components/Main/Main.styled.jsx","constance/constance.js","components/MovieDetailsTemplate/MovieDetailsTemplate.styled.jsx","components/BackBtn/BackBtn.styled.jsx","components/BackBtn/BackBtn.jsx","components/MovieDetailsTemplate/MovieDetailsTemplate.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/themoviedbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Main = styled.main`\n  background: linear-gradient(#180101, #4e0d0d);\n  \n`;","export const SEARCH_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = 'acf3cca943ac5337a13eedff98e533f5';\nexport const POPULAR_FILM_FETCH = '/trending/movie/day';\nexport const SEARCH__MOVIE = '/search/movie';\nexport const FILM = '/movie';\nexport const FILM_CAST = '/credits';\nexport const FILM_REVIEWS = '/reviews';\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  text-align: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Article = styled.article`\n    \n`;\n\nexport const Img = styled.img`\n  /* margin-left: auto;\n  margin-right: auto; */\n  width: 300px;\n  height: 400px;\n  margin-bottom: 20px;  \n`;\n\nexport const DefaultImg = styled.img`\n  width: 300px;\n  height: 400px;\n  margin-bottom: 20px; \n`;\n\nexport const MovieTitle = styled.h2`\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 20px;\n  line-height: 1.15;\n  margin-bottom: 10px;\n  color: #fff;\n`;\n\nexport const Score = styled.h3`\n  font-size: 18px;\n  line-height: 1.25;\n  color: #fff;\n  margin-bottom: 10px;\n`;\n\nexport const ScoreValue = styled.span`\n  color: #ec711f;\n  margin-left: 5px;\n`;\n\nexport const Overview = styled.h3`\n  font-size: 18px;\n  line-height: 1.25;\n  color: #fff;\n`;\n\nexport const OverviewDescr = styled.p`\n  font-size: 16px;\n  color: #ec711f;\n  margin-bottom: 10px;\n`\nexport const Genres = styled.h3`\n  font-size: 18px;\n  line-height: 1.25;\n  color: #fff;\n\n`;\n\nexport const GenresDescr = styled.p`\n  font-size: 16px;\n  color: #ec711f;\n  margin-bottom: 10px;\n\n`\nexport const MoreInformation = styled.h3`\n  font-size: 18px;\n  line-height: 1.25;\n  color: #fff;\n  margin-bottom: 10px;\n`\n\nexport const Link = styled(NavLink)`\n  width: 32px;\n  height: 32px;\n  background-color: #ec711f;\n  border-radius: 5px;\n  color: #fff;\n  padding: 5px;\n  transition: background-color 250ms ease;\n\n  :hover, \n  :focus {\n    background-color: #fa6705;\n  }\n\n  &.active{\n    background: #e94c0e;\n  }\n  :not(:last-child){\n    margin-right: 10px;\n  }\n`\n\n\n","import styled from 'styled-components';\n\nexport const BackBtnStyled = styled.button`\n   width: 100px;\n   height: 35px;\n   font-size: 16px;\n   background-color: #ec711f;\n   border: none;\n   border-radius: 5px;\n   padding: 5px;\n   text-align: center;\n   color: #fff;\n   margin-bottom: 10px;\n\n   :hover {\n       background-color: #ec4f1f;\n   }\n`;","import { useLocation, useNavigate } from \"react-router-dom\"\nimport { BackBtnStyled } from \"./BackBtn.styled\";\nimport { BsArrowLeft } from \"react-icons/bs\"\n\nexport const BackBtn = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const handleClick = () => {\n        navigate(location?.state?.from ?? '/movies');\n    } \n    return (\n        <BackBtnStyled type=\"button\" onClick={handleClick}><BsArrowLeft size='20px'/> Go back</BackBtnStyled>\n    )\n}\n","import { SEARCH_IMG_URL } from \"constance\";\nimport { useLocation } from \"react-router-dom\";\nimport { Section, Article, Img, DefaultImg, MovieTitle, Score, ScoreValue, Overview, OverviewDescr, Genres, GenresDescr, MoreInformation, Link } from \"./MovieDetailsTemplate.styled\";\nimport { Wrapper } from \"components/Wrapper/Wrapper.styled\";\nimport { BackBtn } from \"components/BackBtn/BackBtn\";\nimport DefaultPoster from \"../../images/PosterNotAvailable.jpg\";\n\n export const MovieDetailsTemplate = ({movie}) => {\n    const location = useLocation();\n\n    const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n    const releaseYear = release_date.slice(0, 4);\n    const filmGenres = genres.map(data => data.name).join(', ');\n    const userScore = vote_average * 10;\n    return (\n        <Section>\n            <Wrapper>\n                <BackBtn />\n                <Article>\n                    {poster_path ? <Img src={`${SEARCH_IMG_URL}${poster_path}`} alt={title} /> : <DefaultImg src={DefaultPoster} alt=\"poster not available\"/>}\n                    \n                    <MovieTitle>{title} ({releaseYear})</MovieTitle>\n                    <Score>User score<ScoreValue>{`${userScore}%`}</ScoreValue></Score>\n                    <Overview>Overview</Overview>\n                        <OverviewDescr>{overview}</OverviewDescr>\n                    <Genres>Genres</Genres>\n                        <GenresDescr>{filmGenres}</GenresDescr>\n                </Article>\n                <MoreInformation>Additional information:</MoreInformation>\n                <nav>\n                    <Link to='cast' state={location.state}>Cast</Link> \n                    <Link to='reviews' state={location.state}>Reviews</Link> \n                </nav>\n            </Wrapper>\n        </Section>\n        \n    )\n}","export const ErrorMessage = ({ value }) => {\n   return <p>We dont have any {value} for this movie.</p>    \n}","import { useEffect, useState, Suspense } from \"react\";\nimport { createChunk } from \"helpers/createChunk\";\nimport { useParams, Routes, Route } from \"react-router-dom\";\nimport { getFilmDetailsById } from \"services/themoviedbApi\";\nimport { MovieDetailsTemplate } from \"components/MovieDetailsTemplate/MovieDetailsTemplate\";\nimport { BounceLoader, DotLoader } from \"react-spinners\";\nimport { ErrorMessage } from \"components/ErrorMessage/ErrorMessage\";\nimport { Main } from \"components/Main/Main.styled\";\n\nconst Cast = createChunk('Cast');\nconst Reviews = createChunk('Reviews');\n\nexport const MovieDetailsPage = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const [filmDetails, setFilmDetails] = useState(null);\n    const [cast, setCast] = useState([]);\n    const [reviews, setReviews] = useState([]);\n    useEffect(() => {\n        setLoading(true);\n        const getFilmDetails = async () => {\n            try {\n                const response = await getFilmDetailsById(movieId);\n                const {\n                    id,\n                    title,\n                    release_date,\n                    vote_average,\n                    poster_path,\n                    overview,\n                    genres,\n                    credits:{ cast },\n                    reviews:{ results},\n                } = response;\n                setFilmDetails({ id, title, release_date, vote_average, poster_path, overview, genres });\n                setCast(cast);\n                setReviews(results)\n            } catch (error) {\n                setError(error.message);\n            } finally {\n            setLoading(false);\n            }\n            \n        }\n        getFilmDetails();\n    }, [movieId]);\n    \n    return (\n       <Main>\n        {error && <h2>{error}</h2>}\n        {loading && <BounceLoader color=\"#e24392\"/>}\n        {filmDetails && <MovieDetailsTemplate movie={filmDetails}/>}\n\n        <Suspense fallback={<DotLoader color=\"#e24392\"/>}>\n            <Routes>\n                <Route path=\"cast\" element={cast.length ?<Cast cast={cast}/> : <ErrorMessage value={'cast information'}/>}/>\n                <Route path=\"reviews\" element={reviews.length ?<Reviews reviews={reviews}/> : <ErrorMessage value={'reviews'}/>}/>\n            </Routes> \n        </Suspense>\n        \n       </Main> \n    )\n}","import axios from 'axios';\nimport { API_KEY, POPULAR_FILM_FETCH, SEARCH__MOVIE, FILM } from '../constance';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getPopularFilms = async () => {\n  const response = await axios.get(`${POPULAR_FILM_FETCH}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchFilmsByName = async name => {\n  const response = await axios.get(\n    `${SEARCH__MOVIE}?api_key=${API_KEY}&query=${name}`\n  );\n  return response.data;\n};\n\nexport const getFilmDetailsById = async id => {\n  const response = await axios.get(\n    `${FILM}/${id}?api_key=${API_KEY}&append_to_response=credits,reviews`\n  );\n  return response.data;\n};\n"],"names":["Main","styled","SEARCH_IMG_URL","API_KEY","POPULAR_FILM_FETCH","SEARCH__MOVIE","FILM","Section","Article","Img","DefaultImg","MovieTitle","Score","ScoreValue","Overview","OverviewDescr","Genres","GenresDescr","MoreInformation","Link","NavLink","BackBtnStyled","BackBtn","location","useLocation","navigate","useNavigate","type","onClick","state","from","size","MovieDetailsTemplate","movie","poster_path","title","release_date","vote_average","overview","genres","releaseYear","slice","filmGenres","map","data","name","join","userScore","src","alt","DefaultPoster","to","ErrorMessage","value","Cast","createChunk","Reviews","MovieDetailsPage","useState","loading","setLoading","error","setError","movieId","useParams","filmDetails","setFilmDetails","cast","setCast","reviews","setReviews","useEffect","getFilmDetails","getFilmDetailsById","response","id","credits","results","message","BounceLoader","color","Suspense","fallback","DotLoader","path","element","length","axios","getPopularFilms","searchFilmsByName"],"sourceRoot":""}