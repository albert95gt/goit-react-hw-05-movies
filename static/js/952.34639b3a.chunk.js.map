{"version":3,"file":"static/js/952.34639b3a.chunk.js","mappings":"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","sources":["components/DefaultImage/DefaultImage.styled.jsx","components/DefaultImage/DefaultImage.jsx","constance/constance.js","components/SearchForm/SearchForm.jsx","components/MoviesPageTemplate/MoviesPageTemplate.jsx","pages/MoviesPage.jsx","services/themoviedbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DefaultImg = styled.img`\n  width: 300px;\n  height: 400px;  \n`;","import { DefaultImg } from './DefaultImage.styled'\nimport PosterNotAvaliable from '../../images/PosterNotAvailable.jpg'\nexport const DefaultImage = () => {\n    return <DefaultImg src={PosterNotAvaliable} alt=\"poster not available\"/>\n}","export const SEARCH_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = 'acf3cca943ac5337a13eedff98e533f5';\nexport const POPULAR_FILM_FETCH = '/trending/movie/day';\nexport const SEARCH__MOVIE = '/search/movie';\nexport const FILM = '/movie';\nexport const FILM_CAST = '/credits';\nexport const FILM_REVIEWS = '/reviews';\n","import { useState } from \"react\"\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [searchValue, setSearchValue] = useState('');\n    \n    const handleChange = event => {\n        setSearchValue(event.currentTarget.value)\n    }\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        const normalizedSearchValue = searchValue.toLowerCase().trim();\n        onSubmit(normalizedSearchValue);\n        setSearchValue('');\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"search films\" value={searchValue} onChange={handleChange}/>\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}","import { Link, useLocation } from \"react-router-dom\";\nimport { SEARCH_IMG_URL } from \"constance\";\nimport { DefaultImage } from \"../DefaultImage/DefaultImage\";\n\nexport const MoviesPageTemplate = ({ films })=> {\n   const location = useLocation();\n       return (\n        <ul>\n            {\n               films.map(({ id, title, poster_path }) => (\n                  <li key={id}>\n                     <Link to={`${id}`} state={{from: location}}>\n                        {poster_path ? <img src={`${SEARCH_IMG_URL}/${poster_path}`} alt={title} /> : <DefaultImage/>}\n                        <h2>{title}</h2>\n                     </Link>\n                  </li>\n               ))\n            }\n         </ul>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { searchFilmsByName } from \"services/themoviedbApi\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MoviesPageTemplate } from \"components/MoviesPageTemplate/MoviesPageTemplate\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { BounceLoader } from \"react-spinners\";\n\nexport const MoviesPage = () => {\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [searchParams, setSearchParams] = useSearchParams();\n   const [films, setFilms] = useState([]);\n\n   useEffect(() => {\n\n      const name = searchParams.get('query')\n      if(!name){\n         return;\n      }\n      setLoading(true);\n\n     const searchFilms = async () => {\n         try {\n            const films = await searchFilmsByName(name);\n            if (!films.results.length) {\n            toast.error('No result, please input a new search value!');\n            return;\n            }\n            setFilms(films.results);\n         } catch (error) {\n           setError(error.message);\n        } finally {\n           setLoading(false);\n        }\n        \n     } \n     searchFilms();    \n   },[searchParams]);\n\n   const onSubmit = value => {\n      if(!value){\n         toast.error('Plese input search value!');\n         return;\n      }\n      setSearchParams({query: value});\n   }\n   \n   return (\n      <>\n         <Toaster toastOptions={{\n            style: {\n               background: '#e45b5b',\n               padding: '16px',\n               color: '#e9e9e9',\n            },\n         }}/>\n         <SearchForm onSubmit={onSubmit}/>\n         {loading && <BounceLoader color=\"#e24392\"/>}\n         {error && <h2>{error}</h2>}\n         {films && \n         <MoviesPageTemplate films={films}/>}\n      </>\n         \n   )\n}","import axios from 'axios';\nimport { API_KEY, POPULAR_FILM_FETCH, SEARCH__MOVIE, FILM } from '../constance';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getPopularFilms = async () => {\n  const response = await axios.get(`${POPULAR_FILM_FETCH}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchFilmsByName = async name => {\n  const response = await axios.get(\n    `${SEARCH__MOVIE}?api_key=${API_KEY}&query=${name}`\n  );\n  return response.data;\n};\n\nexport const getFilmDetailsById = async id => {\n  const response = await axios.get(\n    `${FILM}/${id}?api_key=${API_KEY}&append_to_response=credits,reviews`\n  );\n  return response.data;\n};\n"],"names":["DefaultImg","styled","DefaultImage","src","PosterNotAvaliable","alt","SEARCH_IMG_URL","API_KEY","POPULAR_FILM_FETCH","SEARCH__MOVIE","FILM","SearchForm","onSubmit","useState","searchValue","setSearchValue","event","preventDefault","normalizedSearchValue","toLowerCase","trim","type","placeholder","value","onChange","currentTarget","MoviesPageTemplate","films","location","useLocation","map","id","title","poster_path","to","state","from","MoviesPage","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","setFilms","useEffect","name","get","searchFilms","searchFilmsByName","results","length","toast","message","toastOptions","style","background","padding","color","query","BounceLoader","axios","getPopularFilms","response","data","getFilmDetailsById"],"sourceRoot":""}