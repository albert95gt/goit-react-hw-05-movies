{"version":3,"file":"static/js/812.5166a79f.chunk.js","mappings":"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","sources":["components/DefaultImage/DefaultImage.styled.jsx","components/DefaultImage/DefaultImage.jsx","constance/constance.js","pages/Cast.jsx","components/HomePageTemplate/HomePageTemplate.styled.jsx","components/HomePageTemplate/HomePageTemplate.jsx","pages/HomePage.jsx","components/MovieDetailsTemplate/MovieDetailsTemplate.styled.jsx","components/BackBtn/BackBtn.styled.jsx","components/BackBtn/BackBtn.jsx","components/MovieDetailsTemplate/MovieDetailsTemplate.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/MovieDetailsPage.jsx","components/SearchForm/SearchForm.jsx","components/MoviesPageTemplate/MoviesPageTemplate.jsx","pages/MoviesPage.jsx","pages/Reviews.jsx","services/themoviedbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DefaultImg = styled.img`\n  width: 300px;\n  height: 400px;  \n`;","import { DefaultImg } from './DefaultImage.styled'\nimport PosterNotAvaliable from '../../images/PosterNotAvailable.jpg'\nexport const DefaultImage = () => {\n    return <DefaultImg src={PosterNotAvaliable} alt=\"poster not available\"/>\n}","export const SEARCH_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = 'acf3cca943ac5337a13eedff98e533f5';\nexport const POPULAR_FILM_FETCH = '/trending/movie/day';\nexport const SEARCH__MOVIE = '/search/movie';\nexport const FILM = '/movie';\nexport const FILM_CAST = '/credits';\nexport const FILM_REVIEWS = '/reviews';\n","import { DefaultImage } from \"components/DefaultImage/DefaultImage\";\nimport { SEARCH_IMG_URL } from \"constance\";\n\nexport const Cast = ({cast}) => {\n    return (\n        <ul>\n            { cast.map(({ id, profile_path, name, character}) => (\n                <li key={id}>\n                {profile_path ? <img src={`${SEARCH_IMG_URL}/${profile_path}`} alt={name} /> : <DefaultImage/>}\n                <p>Name: {name}</p>\n                <p>Character: {character}</p>\n                </li>\n            ))}\n        </ul>\n    )\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  text-align: center;\n  background: #383838;\n`;\nexport const HomePageTitle = styled.h2`\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-weight: 500;\n    font-size: 24px;\n    margin-bottom: 20px;\n    color: #ec711f;\n`;\n\nexport const FilmList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const FilmItem = styled.li`\n    width: 240px;\n    border-radius: 10px;\n    overflow: hidden;\n    background-color: #fff;\n    transform: scale(1);\n    transition: transform 250ms ease;\n    :not(:last-child){\n        margin-bottom: 30px;\n    }\n    :hover,\n    :focus {\n        transform: scale(1.1);\n    }\n`;\n\nexport const FilmItemImg = styled.img`\n    width: 290px;\n    height: 320px;\n    object-fit: fill;\n`;\n\nexport const FilmItemTitle = styled.h3`\n    padding: 5px;\n    font-family: Georgia, 'Times New Roman', Times, serif;\n    font-weight: 400;\n    line-height: 133%;\n\n    color: #000;\n`;\n\n","import { Link, useLocation } from \"react-router-dom\";\nimport { SEARCH_IMG_URL } from \"constance\";\nimport { HomePageTitle, Section, FilmList, FilmItem, FilmItemImg, FilmItemTitle } from \"./HomePageTemplate.styled\";\nimport { Wrapper } from \"components/Wrapper\";\nexport const HomePageTemplate = ({ films }) => {\n    const location = useLocation();\n    return (\n        <Section>\n            <Wrapper>\n                <HomePageTitle>Trending today:</HomePageTitle>\n                <FilmList>\n                {films.map(({ id, title, poster_path })=> (\n                    <FilmItem key={id}>\n                        <Link to={`movies/${id}`} state={{from: location}}>\n                            <FilmItemImg src={`${SEARCH_IMG_URL}/${poster_path}`} alt={title} />\n                            <FilmItemTitle>{title}</FilmItemTitle>\n                        </Link>\n                    </FilmItem>\n                ))}\n                </FilmList>\n            </Wrapper>\n        </Section>\n        \n    )\n}","import { getPopularFilms } from \"services/themoviedbApi\";\nimport { useState, useEffect } from \"react\";\nimport { HomePageTemplate } from \"components/HomePageTemplate/HomePageTemplate\";\nimport { BounceLoader } from \"react-spinners\";\n\nexport const HomePage = () => {\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [films, setFilms] = useState([]);\n   useEffect(() => {\n    setLoading(true);  \n    const getFilms = async () => {\n      try {\n         const popularFilms = await getPopularFilms();\n         setFilms(popularFilms.results);\n      } catch (error) {\n         setError(error.message);\n      } finally {\n         setLoading(false);  \n      }\n    }\n    getFilms();\n   }, []);\n   return (\n      <> \n         {error && <h2>{error}</h2>}\n         <HomePageTemplate films={films}/>\n         {loading && <BounceLoader color=\"#e24392\"/>}\n      </>\n   )\n}","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  text-align: center;\n  background: #383838;\n`;\n\nexport const Article = styled.article`\n    \n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  height: 400px;  \n`;\n\n","import styled from 'styled-components';\n\nexport const BackBtnStyled = styled.button`\n   width: 120px;\n   height: 50px;\n   font-size: 16px;\n   background-color: #ec711f;\n   border: none;\n   border-radius: 5px;\n   padding: 5px;\n   text-align: center;\n   color: #fff;\n   margin-top: 10px;\n   margin-bottom: 10px;\n\n   :hover {\n       background-color: #ec4f1f;\n   }\n`;","import { useLocation, useNavigate } from \"react-router-dom\"\nimport { BackBtnStyled } from \"./BackBtn.styled\";\nimport { BsArrowLeft } from \"react-icons/bs\"\n\nexport const BackBtn = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const handleClick = () => {\n        navigate(location?.state?.from ?? '/movies');\n    } \n    return (\n        <BackBtnStyled type=\"button\" onClick={handleClick}><BsArrowLeft size='20px'/> Go back</BackBtnStyled>\n    )\n}\n","import { SEARCH_IMG_URL } from \"constance\";\nimport { useLocation, NavLink } from \"react-router-dom\";\nimport { Section, Article, Img } from \"./MovieDetailsTemplate.styled\";\nimport { Wrapper } from \"components/Wrapper/Wrapper.styled\";\nimport { BackBtn } from \"components/BackBtn/BackBtn\";\n\n export const MovieDetailsTemplate = ({movie}) => {\n    const location = useLocation();\n\n    const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n    const releaseYear = release_date.slice(0, 4);\n    const filmGenres = genres.map(data => data.name).join(', ');\n    return (\n        <Section>\n            <Wrapper>\n                <BackBtn />\n                <Article>\n                    <Img src={`${SEARCH_IMG_URL}${poster_path}`} alt=\"\" />\n                    <h2>{title} ({releaseYear})</h2>\n                        <p>User score: {vote_average}</p>\n                    <h3>Overview</h3>\n                        <p>{overview}</p>\n                    <h4>Genres</h4>\n                        <p>{filmGenres}</p>\n                </Article>\n                <hr />\n                <p>Additional information</p>\n                <nav>\n                    <NavLink to='cast' state={location.state}>Cast</NavLink> \n                    <NavLink to='reviews' state={location.state}>Reviews</NavLink> \n                </nav>\n                <hr />\n            </Wrapper>\n        </Section>\n        \n    )\n}","export const ErrorMessage = ({ value }) => {\n   return <p>We dont have any {value} for this movie.</p>    \n}","import { useEffect, useState, Suspense } from \"react\";\nimport { createChunk } from \"helpers/createChunk\";\nimport { useParams, Routes, Route } from \"react-router-dom\";\nimport { getFilmDetailsById } from \"services/themoviedbApi\";\nimport { MovieDetailsTemplate } from \"components/MovieDetailsTemplate/MovieDetailsTemplate\";\nimport { BounceLoader, DotLoader } from \"react-spinners\";\nimport { ErrorMessage } from \"components/ErrorMessage/ErrorMessage\";\n\nconst Cast = createChunk('Cast');\nconst Reviews = createChunk('Reviews');\n\nexport const MovieDetailsPage = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const [filmDetails, setFilmDetails] = useState(null);\n    const [cast, setCast] = useState([]);\n    const [reviews, setReviews] = useState([]);\n    useEffect(() => {\n        setLoading(true);\n        const getFilmDetails = async () => {\n            try {\n                const response = await getFilmDetailsById(movieId);\n                const {\n                    id,\n                    title,\n                    release_date,\n                    vote_average,\n                    poster_path,\n                    overview,\n                    genres,\n                    credits:{ cast },\n                    reviews:{ results},\n                } = response;\n                setFilmDetails({ id, title, release_date, vote_average, poster_path, overview, genres });\n                setCast(cast);\n                setReviews(results)\n            } catch (error) {\n                setError(error.message);\n            } finally {\n            setLoading(false);\n            }\n            \n        }\n        getFilmDetails();\n    }, [movieId]);\n    \n    return (\n       <>\n        {error && <h2>{error}</h2>}\n        {loading && <BounceLoader color=\"#e24392\"/>}\n        {filmDetails && <MovieDetailsTemplate movie={filmDetails}/>}\n\n        <Suspense fallback={<DotLoader color=\"#e24392\"/>}>\n            <Routes>\n                <Route path=\"cast\" element={cast.length ?<Cast cast={cast}/> : <ErrorMessage value={'cast information'}/>}/>\n                <Route path=\"reviews\" element={reviews.length ?<Reviews reviews={reviews}/> : <ErrorMessage value={'reviews'}/>}/>\n            </Routes> \n        </Suspense>\n\n       </> \n    )\n}","import { useState } from \"react\"\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [searchValue, setSearchValue] = useState('');\n    \n    const handleChange = event => {\n        setSearchValue(event.currentTarget.value)\n    }\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        const normalizedSearchValue = searchValue.toLowerCase().trim();\n        onSubmit(normalizedSearchValue);\n        setSearchValue('');\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"search films\" value={searchValue} onChange={handleChange}/>\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}","import { Link, useLocation } from \"react-router-dom\";\nimport { SEARCH_IMG_URL } from \"constance\";\nimport { DefaultImage } from \"../DefaultImage/DefaultImage\";\n\nexport const MoviesPageTemplate = ({ films })=> {\n   const location = useLocation();\n       return (\n        <ul>\n            {\n               films.map(({ id, title, poster_path }) => (\n                  <li key={id}>\n                     <Link to={`${id}`} state={{from: location}}>\n                        {poster_path ? <img src={`${SEARCH_IMG_URL}/${poster_path}`} alt={title} /> : <DefaultImage/>}\n                        <h2>{title}</h2>\n                     </Link>\n                  </li>\n               ))\n            }\n         </ul>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { searchFilmsByName } from \"services/themoviedbApi\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MoviesPageTemplate } from \"components/MoviesPageTemplate/MoviesPageTemplate\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { BounceLoader } from \"react-spinners\";\n\nexport const MoviesPage = () => {\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n   const [searchParams, setSearchParams] = useSearchParams();\n   const [films, setFilms] = useState([]);\n\n   useEffect(() => {\n\n      const name = searchParams.get('query')\n      if(!name){\n         return;\n      }\n      setLoading(true);\n\n     const searchFilms = async () => {\n         try {\n            const films = await searchFilmsByName(name);\n            if (!films.results.length) {\n            toast.error('No result, please input a new search value!');\n            return;\n            }\n            setFilms(films.results);\n         } catch (error) {\n           setError(error.message);\n        } finally {\n           setLoading(false);\n        }\n        \n     } \n     searchFilms();    \n   },[searchParams]);\n\n   const onSubmit = value => {\n      if(!value){\n         toast.error('Plese input search value!');\n         return;\n      }\n      setSearchParams({query: value});\n   }\n   \n   return (\n      <>\n         <Toaster toastOptions={{\n            style: {\n               background: '#e45b5b',\n               padding: '16px',\n               color: '#e9e9e9',\n            },\n         }}/>\n         <SearchForm onSubmit={onSubmit}/>\n         {loading && <BounceLoader color=\"#e24392\"/>}\n         {error && <h2>{error}</h2>}\n         {films && \n         <MoviesPageTemplate films={films}/>}\n      </>\n         \n   )\n}","export const Reviews = ({reviews}) => {\n   return (\n       <ul>\n               {reviews.map(({id, author, content}) => (\n                   <li key={id}>\n                       <h3>Author: {author}</h3>\n                       <p>{content}</p>\n                   </li>\n               ))}\n       </ul>\n   )\n}\n\n\n\n","import axios from 'axios';\nimport { API_KEY, POPULAR_FILM_FETCH, SEARCH__MOVIE, FILM } from '../constance';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getPopularFilms = async () => {\n  const response = await axios.get(`${POPULAR_FILM_FETCH}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchFilmsByName = async name => {\n  const response = await axios.get(\n    `${SEARCH__MOVIE}?api_key=${API_KEY}&query=${name}`\n  );\n  return response.data;\n};\n\nexport const getFilmDetailsById = async id => {\n  const response = await axios.get(\n    `${FILM}/${id}?api_key=${API_KEY}&append_to_response=credits,reviews`\n  );\n  return response.data;\n};\n"],"names":["DefaultImg","styled","DefaultImage","src","PosterNotAvaliable","alt","SEARCH_IMG_URL","API_KEY","POPULAR_FILM_FETCH","SEARCH__MOVIE","FILM","Cast","cast","map","id","profile_path","name","character","Section","HomePageTitle","FilmList","FilmItem","FilmItemImg","FilmItemTitle","HomePageTemplate","films","location","useLocation","Wrapper","title","poster_path","to","state","from","HomePage","useState","loading","setLoading","error","setError","setFilms","useEffect","getFilms","getPopularFilms","popularFilms","results","message","BounceLoader","color","Article","Img","BackBtnStyled","BackBtn","navigate","useNavigate","type","onClick","size","MovieDetailsTemplate","movie","release_date","vote_average","overview","genres","releaseYear","slice","filmGenres","data","join","ErrorMessage","value","createChunk","Reviews","MovieDetailsPage","movieId","useParams","filmDetails","setFilmDetails","setCast","reviews","setReviews","getFilmDetails","getFilmDetailsById","response","credits","Suspense","fallback","DotLoader","path","element","length","SearchForm","onSubmit","searchValue","setSearchValue","event","preventDefault","normalizedSearchValue","toLowerCase","trim","placeholder","onChange","currentTarget","MoviesPageTemplate","MoviesPage","useSearchParams","searchParams","setSearchParams","get","searchFilms","searchFilmsByName","toast","toastOptions","style","background","padding","query","author","content","axios"],"sourceRoot":""}