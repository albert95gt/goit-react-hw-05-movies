{"version":3,"file":"static/js/165.90123d7d.chunk.js","mappings":"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","sources":["constance/constance.js","components/MovieDetailsTemplate/MovieDetailsTemplate.styled.jsx","components/BackBtn/BackBtn.styled.jsx","components/BackBtn/BackBtn.jsx","components/MovieDetailsTemplate/MovieDetailsTemplate.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/MovieDetailsPage.jsx","services/themoviedbApi.js"],"sourcesContent":["export const SEARCH_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const API_KEY = 'acf3cca943ac5337a13eedff98e533f5';\nexport const POPULAR_FILM_FETCH = '/trending/movie/day';\nexport const SEARCH__MOVIE = '/search/movie';\nexport const FILM = '/movie';\nexport const FILM_CAST = '/credits';\nexport const FILM_REVIEWS = '/reviews';\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  text-align: center;\n  background: #383838;\n`;\n\nexport const Article = styled.article`\n    \n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  height: 400px;  \n`;\n\n","import styled from 'styled-components';\n\nexport const BackBtnStyled = styled.button`\n   width: 120px;\n   height: 50px;\n   font-size: 16px;\n   background-color: #ec711f;\n   border: none;\n   border-radius: 5px;\n   padding: 5px;\n   text-align: center;\n   color: #fff;\n   margin-top: 10px;\n   margin-bottom: 10px;\n\n   :hover {\n       background-color: #ec4f1f;\n   }\n`;","import { useLocation, useNavigate } from \"react-router-dom\"\nimport { BackBtnStyled } from \"./BackBtn.styled\";\nimport { BsArrowLeft } from \"react-icons/bs\"\n\nexport const BackBtn = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const handleClick = () => {\n        navigate(location?.state?.from ?? '/movies');\n    } \n    return (\n        <BackBtnStyled type=\"button\" onClick={handleClick}><BsArrowLeft size='20px'/> Go back</BackBtnStyled>\n    )\n}\n","import { SEARCH_IMG_URL } from \"constance\";\nimport { useLocation, NavLink } from \"react-router-dom\";\nimport { Section, Article, Img } from \"./MovieDetailsTemplate.styled\";\nimport { Wrapper } from \"components/Wrapper/Wrapper.styled\";\nimport { BackBtn } from \"components/BackBtn/BackBtn\";\n\n export const MovieDetailsTemplate = ({movie}) => {\n    const location = useLocation();\n\n    const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n    const releaseYear = release_date.slice(0, 4);\n    const filmGenres = genres.map(data => data.name).join(', ');\n    return (\n        <Section>\n            <Wrapper>\n                <BackBtn />\n                <Article>\n                    <Img src={`${SEARCH_IMG_URL}${poster_path}`} alt=\"\" />\n                    <h2>{title} ({releaseYear})</h2>\n                        <p>User score: {vote_average}</p>\n                    <h3>Overview</h3>\n                        <p>{overview}</p>\n                    <h4>Genres</h4>\n                        <p>{filmGenres}</p>\n                </Article>\n                <hr />\n                <p>Additional information</p>\n                <nav>\n                    <NavLink to='cast' state={location.state}>Cast</NavLink> \n                    <NavLink to='reviews' state={location.state}>Reviews</NavLink> \n                </nav>\n                <hr />\n            </Wrapper>\n        </Section>\n        \n    )\n}","export const ErrorMessage = ({ value }) => {\n   return <p>We dont have any {value} for this movie.</p>    \n}","import { useEffect, useState, Suspense } from \"react\";\nimport { createChunk } from \"helpers/createChunk\";\nimport { useParams, Routes, Route } from \"react-router-dom\";\nimport { getFilmDetailsById } from \"services/themoviedbApi\";\nimport { MovieDetailsTemplate } from \"components/MovieDetailsTemplate/MovieDetailsTemplate\";\nimport { BounceLoader, DotLoader } from \"react-spinners\";\nimport { ErrorMessage } from \"components/ErrorMessage/ErrorMessage\";\n\nconst Cast = createChunk('Cast');\nconst Reviews = createChunk('Reviews');\n\nexport const MovieDetailsPage = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const [filmDetails, setFilmDetails] = useState(null);\n    const [cast, setCast] = useState([]);\n    const [reviews, setReviews] = useState([]);\n    useEffect(() => {\n        setLoading(true);\n        const getFilmDetails = async () => {\n            try {\n                const response = await getFilmDetailsById(movieId);\n                const {\n                    id,\n                    title,\n                    release_date,\n                    vote_average,\n                    poster_path,\n                    overview,\n                    genres,\n                    credits:{ cast },\n                    reviews:{ results},\n                } = response;\n                setFilmDetails({ id, title, release_date, vote_average, poster_path, overview, genres });\n                setCast(cast);\n                setReviews(results)\n            } catch (error) {\n                setError(error.message);\n            } finally {\n            setLoading(false);\n            }\n            \n        }\n        getFilmDetails();\n    }, [movieId]);\n    \n    return (\n       <>\n        {error && <h2>{error}</h2>}\n        {loading && <BounceLoader color=\"#e24392\"/>}\n        {filmDetails && <MovieDetailsTemplate movie={filmDetails}/>}\n\n        <Suspense fallback={<DotLoader color=\"#e24392\"/>}>\n            <Routes>\n                <Route path=\"cast\" element={cast.length ?<Cast cast={cast}/> : <ErrorMessage value={'cast information'}/>}/>\n                <Route path=\"reviews\" element={reviews.length ?<Reviews reviews={reviews}/> : <ErrorMessage value={'reviews'}/>}/>\n            </Routes> \n        </Suspense>\n\n       </> \n    )\n}","import axios from 'axios';\nimport { API_KEY, POPULAR_FILM_FETCH, SEARCH__MOVIE, FILM } from '../constance';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getPopularFilms = async () => {\n  const response = await axios.get(`${POPULAR_FILM_FETCH}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchFilmsByName = async name => {\n  const response = await axios.get(\n    `${SEARCH__MOVIE}?api_key=${API_KEY}&query=${name}`\n  );\n  return response.data;\n};\n\nexport const getFilmDetailsById = async id => {\n  const response = await axios.get(\n    `${FILM}/${id}?api_key=${API_KEY}&append_to_response=credits,reviews`\n  );\n  return response.data;\n};\n"],"names":["SEARCH_IMG_URL","API_KEY","POPULAR_FILM_FETCH","SEARCH__MOVIE","FILM","Section","styled","Article","Img","BackBtnStyled","BackBtn","location","useLocation","navigate","useNavigate","type","onClick","state","from","size","MovieDetailsTemplate","movie","poster_path","title","release_date","vote_average","overview","genres","releaseYear","slice","filmGenres","map","data","name","join","src","alt","to","ErrorMessage","value","Cast","createChunk","Reviews","MovieDetailsPage","useState","loading","setLoading","error","setError","movieId","useParams","filmDetails","setFilmDetails","cast","setCast","reviews","setReviews","useEffect","getFilmDetails","getFilmDetailsById","response","id","credits","results","message","BounceLoader","color","Suspense","fallback","DotLoader","path","element","length","axios","getPopularFilms","searchFilmsByName"],"sourceRoot":""}